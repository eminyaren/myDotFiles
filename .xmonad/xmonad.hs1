import XMonad
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Hooks.ManageHelpers
import XMonad.Hooks.EwmhDesktops


import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig(additionalKeysP)
import XMonad.Util.Ungrab
import XMonad.Util.Loggers
import XMonad.Util.SpawnOnce


import XMonad.Layout.NoBorders
import XMonad.Layout.Spacing


import System.IO



myStartup = do
     spawnOnce "lxsession &"
     spawnOnce "thunar --daemon &"
     spawnOnce "compton &"
     spawnOnce "nitrogen --set-scaled --random &"
     spawnOnce "nm-applet &"
     spawnOnce "volumeicon &"
     spawnOnce "xfce4-power-manager &"
     spawnOnce "trayer --edge top --align right --widthtype request --padding 6 --SetDockType true --SetPartialStrut true --expand true --monitor 1 --transparent true --alpha 0 --tint 0x333333  --height 22 &"



myLayout = spacing 5 $ tiled ||| Mirror tiled ||| Full
    where
      tiled   = Tall nmaster delta ratio
      nmaster = 1      -- Default number of windows in the master pane
      ratio   = 1/2    -- Default proportion of screen occupied by master pane
      delta   = 3/100  -- Percent of screen to increment by when resizing panes


myManageHook = composeAll
    [ className =? "Gimp"      --> doFloat
    , className =? "Vncviewer" --> doFloat
    , className =? "resolve"   --> doFloat
    ]

main = do
    xmproc <- spawnPipe "xmobar"
    xmonad $ ewmh $ docks def
        { manageHook = myManageHook <+> manageDocks <+> manageHook defaultConfig -- make sure to include myManageHook definition from above
        , layoutHook = smartBorders . avoidStruts $ myLayout
        , handleEventHook = fullscreenEventHook
        , logHook = dynamicLogWithPP xmobarPP
                        { ppOutput = hPutStrLn xmproc
                        , ppTitle = xmobarColor "green" "" . shorten 50
                        , ppSep             = magenta " â€¢ "
                        --, ppTitleSanitize   = yellow . xmobarStrip . shorten 60
                        , ppCurrent         = yellow . wrap "[" "]"
                        , ppHidden          = white . wrap "*" ""
                        , ppHiddenNoWindows = lowWhite . wrap " " ""
                        , ppUrgent          = red . wrap (yellow "!") (yellow "!")
                        }
        , modMask = mod4Mask     -- Rebind Mod to the Windows key
        , terminal = "kitty"
        , startupHook = myStartup
        } `additionalKeysP`
        [ ("M-b", spawn "brave")
        , ("M-r", spawn "/home/emin/scripts/resolve")
        , ("M-C-S-p", spawn "poweroff")
        ]



magenta  = xmobarColor "#ff79c6" ""
blue     = xmobarColor "#bd93f9" ""
white    = xmobarColor "#f8f8f2" ""
yellow   = xmobarColor "#f1fa8c" ""
red      = xmobarColor "#ff5555" ""
lowWhite = xmobarColor "#bbbbbb" ""
